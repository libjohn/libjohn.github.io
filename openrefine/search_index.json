[
["demonstration.html", "Demonstration Load Data Navigating the “Project” Facets Rows vs. Records Web Scrape &amp; API Parsing Data Split Concatenate Find &amp; Replace Facet by Blank Text filter Custom Facet", " Demonstration Load Data Create Project &gt; Web Addresses (URLs) &gt; https://raw.githubusercontent.com/libjohn/openrefine/master/data/bicycle-subset-phm-collection.tsv Uncheck - “Quotation marks are used to enclose” (bottom-right) Project Name to “bicycle categories” Navigating the “Project” Notice there are 72 rows Notice there are two views: rows and records The “records” view is for advanced manipulation You can “Show” 5-50 rows at a time Navigate screens “&lt; Previous” &amp; “next &gt;” Facets Categories &gt; Facet &gt; Text facet Notice mashup of “pipe delimited” text facets Why are there Pipe delimiters? How many Category choices exist? Switch between the “name” and “count” sorting options. Export a CSV file Export &gt; Comma-separated value How many rows will export: 4, 16, 72, 180? Rows vs. Records Row v Records 1 Categories &gt; edit cells &gt; split multi-valued cells &gt; separator = | Now how many Category choices exist? Click records to switch to the records view Click count What is the most popular Category term? Click name Limit to the “Juvenilia” facet; How many matching records? Web Scrape &amp; API Scraping data from an API or Webpage new_link &gt; Edit column &gt; Add column by fetching URLs… New column name = Web Data Notice Throttle delay 2000 milliseconds is good. Less than 2 seconds and you might get booted, blocked, cast out! Click OK and wait When done, you’ve got all the source data for each page associated with the link in the “Persistent Link” column Parsing Data A Brief Introduction Look fora big block of gobbly text in the “Web Data” column. That is HTML formatted data Typically, after fetching data, you’ll need to parse it You can use GREL 2 to parse data and isolate a specific bit of desired information GREL is the advanced power of OpenRefine. We will come back to this For example, you can transform the data in the retrieved cells with a regular expression to gather only the title of each object Web Data &gt; Edit column &gt; Add column based on this column… New Column Name = Web Page Title Expression = value.parseHtml().select(&quot;h1.object-page__title&quot;)[0].htmlText() Split remove faceting: click Remove All in the facet sidebar Production Date &gt; Edit column &gt; Split into several columns… Seperator = - (i.e. “space dash space”) Concatenate Height &gt; Edit column &gt; Add column based on this column GREL Expression = value + &quot; x &quot; + cells[&quot;Width&quot;].value Find &amp; Replace Dimension &gt; Edit cells &gt; Transform GREL Expression = value.replace(&quot;mm&quot;,&quot;&quot;) Facet by Blank Dimension &gt; Facet &gt; Customized facet &gt; facet by blank Text filter Clear all facets Title = bmx Custom Facet Production date Facet &gt; custom text facet value.match(/(\\d\\d).*/)[0] Row v Records Explained↩ General Refine Expression Language↩ "]
]
